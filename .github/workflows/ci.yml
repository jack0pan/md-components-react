name: Continuous Integration
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  preparation:
    name: Preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache Node.js modules
        id: cache-node-modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
  code-quality:
    name: Code Quality
    needs: preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Restore Node.js modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Prettier
        run: npx prettier --check .
      - name: StyleLint
        run: npx stylelint 'src/**/*.css'
      - name: ESLint
        run: npx eslint . --ext js,ts,tsx
  building:
    name: Building
    needs: preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Restore Node.js modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Type check
        run: npx tsc --noEmit
      - name: Compile
        run: npx gulp compile
  code-security:
    name: Code Security
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          queries: security-and-quality
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v1
  perf-testing:
    name: Performance Testing
    needs: preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Restore Node.js modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Compressed size
        uses: preactjs/compressed-size-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          build-script: gulp bundle
          pattern: './dist/*.min.{js,css}'
  unit-testing:
    name: Unit Testing
    needs: preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Restore Node.js modules
        uses: actions/cache@v2.1.7
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Jest
        run: npx jest --ci --coverage
